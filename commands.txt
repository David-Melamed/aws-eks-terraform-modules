commands:
#Connect Cluster
kubectl config get-contexts
aws eks update-kubeconfig --name ekslab --role-arn arn:aws:iam::<ACCOUNT_ID>:role/<CLUSTER_ROLE_NAME>
kubectl config get-contexts
kubectl config use-context arn:aws:eks:<REGION>:<ACCOUNT_ID>:cluster/<cluster_name>

#Install Argo:
kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/v2.4.7/manifests/install.yaml
kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
kubectl port-forward svc/argocd-server -n argocd 8080:443
export ARGOCD_SERVER=`kubectl get svc argocd-server -n argocd -o json | jq --raw-output '.status.loadBalancer.ingress[0].hostname'`
export ARGO_PWD=`kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d`
argocd login $ARGOCD_SERVER --username admin --password $ARGO_PWD --insecure
kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d

#Deploy cretificate
kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.15.1/cert-manager.yaml

#Get token
aws eks get-token --cluster-name ekslab --role-arn arn:aws:iam::<ACCOUNT_ID>:role/<CLUSTER_ROLE_NAME>