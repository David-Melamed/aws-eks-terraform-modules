apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webapp-ingress
  namespace: development
  annotations: 
    alb.ingress.kubernetes.io/load-balancer-name: 'webapp-lb'
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/target-group-attributes: load_balancing.algorithm.type=least_outstanding_requests 
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/certificate-arn: '<CERTIFICATE_ARN>'
    alb.ingress.kubernetes.io/actions.forward: '{"Type": "forward", "ForwardConfig": {"TargetGroups": [{"ServiceName": "counter-service", "ServicePort": "80"}]}}'
    alb.ingress.kubernetes.io/group.name: webapp-group
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-1-2017-01
spec:
  ingressClassName: alb 
  rules:
  - host: awsdjangodeployer.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: forward
            port:
              name: use-annotation